{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/cesium/Source/Core sync","(webpack)/buildin/global.js","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/earth/earth.component.ts","./src/app/components/earth/earth.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/search-result/search-result.component.ts","./src/app/components/search-result/search-result.component.html","./src/app/components/search/search.component.ts","./src/app/components/search/search.component.html","./src/app/models/satellite.model.ts","./src/app/services/data-sharing.service.ts","./src/app/services/map.service.ts","./src/app/services/url-formation.service.ts","./src/app/shared/loader/loader.component.ts","./src/app/shared/loader/loader.component.html","./src/app/shared/loading-overlay/loading-overlay.component.ts","./src/app/shared/loading-overlay/loading-overlay.component.html","./src/constants.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/cesium/Source/Core sync recursive\";","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EarthComponent } from '@features/earth/earth.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: EarthComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.less']\r\n})\r\nexport class AppComponent {\r\n}\r\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\r\nimport { NavbarComponent } from '@features/navbar/navbar.component';\r\nimport { EarthComponent } from \"@features/earth/earth.component\";\r\nimport { SearchResultComponent } from './components/search-result/search-result.component';\r\nimport { SearchComponent } from './components/search/search.component';\r\nimport { LoadingOverlayComponent } from './shared/loading-overlay/loading-overlay.component';\r\nimport { LoaderComponent } from './shared/loader/loader.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    EarthComponent,\r\n    NavbarComponent,\r\n    SearchResultComponent,\r\n    SearchComponent,\r\n    LoadingOverlayComponent,\r\n    LoaderComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [{ provide: LocationStrategy, useClass: HashLocationStrategy }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\r\nimport * as Cesium from 'cesium';\r\nimport { getSatelliteInfo, getGroundTracks, getEpochTimestamp } from 'tle.js';\r\nimport { MapService } from '@services/map.service';\r\nimport { TleResponseModel } from '@models/tle-response.model';\r\nimport { SatelliteModel } from '@models/satellite.model';\r\nimport { Subscription, timer, Subject } from 'rxjs';\r\nimport { DataSharingService } from '@services/data-sharing.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-earth',\r\n  templateUrl: './earth.component.html',\r\n  styleUrls: ['./earth.component.less']\r\n})\r\nexport class EarthComponent implements OnInit, OnDestroy {\r\n  @ViewChild('mapContainer', { static: false }) mapContainer: ElementRef;\r\n  viewer: Cesium.Viewer;\r\n  satellites: SatelliteModel[] = [];\r\n  globalRefreshCounter: number = 0;\r\n  satelliteAsset: any = null;\r\n\r\n  stopTimer = new Subject<void>();\r\n  refreshDataEvent = new Subject<void>();\r\n  isTimerStopped = false;\r\n\r\n  subscription = new Subscription();\r\n\r\n  constructor(private mapService: MapService,\r\n              private dataSharingService: DataSharingService) {\r\n    this.satellites = this.dataSharingService.satellites;\r\n    this.satellites.push(new SatelliteModel(44943, null, false, false, null));\r\n    this.satellites.push(new SatelliteModel(47799, null, false, false, null));\r\n  }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.viewer = this.renderEarth(this.mapContainer);\r\n    this.registerSubscriptions();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.stopTimer.next();\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  registerSubscriptions(): void {\r\n    this.subscription.add(this.refreshDataEvent.subscribe(() => {\r\n      this.refreshData();\r\n    }));\r\n\r\n    this.subscription.add(this.dataSharingService.getToggleSelectedSatellite()\r\n    .subscribe((selectedSatellite: SatelliteModel) => {\r\n      const findIndex: number = this.satellites.findIndex((satellite) => satellite.satId == selectedSatellite.satId);\r\n      if(findIndex == -1) {\r\n        this.satellites.push(selectedSatellite);\r\n        this.stopTimer.next();\r\n        this.isTimerStopped = true;\r\n        this.refreshDataEvent.next();\r\n      } else {\r\n        this.satellites.splice(findIndex, 1);\r\n        this.removeSatelliteAndOrbit(selectedSatellite);\r\n      }\r\n    }));\r\n\r\n    this.startTimer();\r\n  }\r\n\r\n  startTimer(): void {\r\n    this.isTimerStopped = false;\r\n    this.subscription.add(\r\n      timer(0, 3000)\r\n      .pipe(takeUntil(this.stopTimer))\r\n      .subscribe(() => {\r\n        this.refreshDataEvent.next();\r\n      })\r\n    );\r\n  }\r\n\r\n  refreshData(): void {\r\n    this.globalRefreshCounter++;\r\n    this.satellites.forEach((satellite) => {\r\n      if(this.needToUpdateTle(satellite)) {\r\n        this.getAllSatData(satellite);\r\n      }\r\n      else {\r\n        const satInfo = getSatelliteInfo(satellite.tleData);\r\n        this.renderSatellite(satInfo, satellite, this.satelliteAsset);\r\n        if(this.globalRefreshCounter > 180) {\r\n          this.globalRefreshCounter = 0;\r\n          this.getAndPlotOrbit(satellite.tleData, satInfo, satellite);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  needToUpdateTle(satellite: SatelliteModel): boolean {\r\n    if(!satellite.tleData) {\r\n      return true;\r\n    }\r\n    // check if 8 hours have passed since last update\r\n    const lastUpdatedTime: number = getEpochTimestamp(satellite.tleData)\r\n    let lastUpdated: Date = new Date(lastUpdatedTime + (8 * 60 * 60 * 1000));\r\n\r\n    // return lastUpdated < new Date();\r\n    return false;\r\n  }\r\n\r\n  renderEarth(el: ElementRef): Cesium.Viewer {\r\n    return new Cesium.Viewer(el.nativeElement, {\r\n      timeline: false\r\n    });\r\n  }\r\n\r\n  getAllSatData(satellite: SatelliteModel): void {\r\n    this.mapService.getTle(satellite.satId).subscribe((res: TleResponseModel) => {\r\n      satellite.satName = res.info.satname;\r\n      const satInfo = getSatelliteInfo(res.tle);\r\n      const tle = res.info.satname + \"\\n\" + (<string>res.tle);\r\n\r\n      satellite.tleData = tle;\r\n      this.getAndPlotOrbit(tle, satInfo, satellite);\r\n      if(this.satelliteAsset) {\r\n        this.renderSatellite(satInfo, satellite, this.satelliteAsset);\r\n      } else {\r\n        this.getSatelliteAssetAndRender(satInfo, satellite);\r\n      }\r\n    });\r\n  }\r\n\r\n  getAndPlotOrbit(tle: string, satInfo: any, satellite: SatelliteModel): void {\r\n    getGroundTracks({\r\n      tle: tle,\r\n      startTimeMS: Date.now(),\r\n      stepMS: 30000,\r\n      isLngLatFormat: true,\r\n    }).then((threeOrbitsArr: any[]) => {\r\n      let currentOrbit: number[][] = threeOrbitsArr[1];\r\n      \r\n      let latLngHeight: number[] = [];\r\n      currentOrbit.forEach((latLng) => {\r\n        latLngHeight.push(latLng[0], latLng[1], satInfo.height * 1000);\r\n      });\r\n\r\n      const coords = Cesium.Cartesian3.fromDegreesArrayHeights(latLngHeight);\r\n      this.plotOrbit(coords, satellite);\r\n    });\r\n  }\r\n\r\n  renderSatellite(satInfo: any, satellite: SatelliteModel, satelliteAsset: any): void {\r\n    const entity: any = this.viewer.entities.getById(satellite.satId.toString());\r\n\r\n    if (!entity) {\r\n      this.viewer.entities.add({\r\n        description: satellite.satName,\r\n        position: Cesium.Cartesian3.fromDegrees(\r\n          satInfo.lng,\r\n          satInfo.lat,\r\n          satInfo.height * 1000\r\n        ),\r\n        model: {\r\n          uri: satelliteAsset,\r\n        },\r\n        id: satellite.satId.toString(),\r\n        show: true,\r\n        label: {\r\n          text: satellite.satName,\r\n          fillColor: satellite.orbitColor\r\n        }\r\n      });\r\n    } else {\r\n      entity.position = Cesium.Cartesian3.fromDegrees(\r\n        satInfo.lng,\r\n        satInfo.lat,\r\n        satInfo.height * 1000\r\n      );\r\n    }\r\n    satellite.isRendered = true;\r\n    if(this.isTimerStopped) {\r\n      this.startTimer();\r\n    }\r\n  }\r\n\r\n  getSatelliteAssetAndRender(satInfo: any, satellite: SatelliteModel){\r\n    Cesium.IonResource.fromAssetId(163159).then((resource) => {\r\n      this.satelliteAsset = resource;\r\n      this.renderSatellite(satInfo, satellite, this.satelliteAsset);\r\n    });\r\n  }\r\n\r\n  plotOrbit(latlngs: Cesium.Cartesian3[], satellite: SatelliteModel): void {\r\n    this.viewer.entities.removeById(satellite.satId.toString()+'orbit');\r\n    const en = this.viewer.entities.add({\r\n      polyline: {\r\n        positions: latlngs,\r\n        width: 3,\r\n        material: satellite.orbitColor\r\n      },\r\n      id: satellite.satId.toString() + 'orbit'\r\n    });\r\n    satellite.isOrbitRendered = true;\r\n  }\r\n\r\n  removeSatelliteAndOrbit(satellite: SatelliteModel): void {\r\n    this.viewer.entities.removeById(satellite.satId.toString());\r\n    this.viewer.entities.removeById(satellite.satId.toString() + 'orbit');\r\n  }\r\n\r\n}\r\n","<div id=\"map-container\" #mapContainer>\r\n\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.less']\r\n})\r\nexport class NavbarComponent {\r\n  \r\n  constructor() {\r\n  }\r\n}\r\n","<div class=\"navbar-wrapper\">\r\n    <app-search></app-search>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { SearchSatellite } from '@models/search-satellite-response.model';\r\nimport { SatelliteModel } from '@models/satellite.model';\r\nimport { DataSharingService } from '@services/data-sharing.service';\r\n\r\n@Component({\r\n  selector: 'app-search-result',\r\n  templateUrl: './search-result.component.html',\r\n  styleUrls: ['./search-result.component.less']\r\n})\r\nexport class SearchResultComponent implements OnInit {\r\n  @Input('searchResults') searchResults: SearchSatellite[] = [];\r\n  @Input('isSearching') isSearching: boolean = false;\r\n\r\n  constructor(private dataSharingService: DataSharingService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  toggleSatellite(satellite: SearchSatellite): void {\r\n    const selectedSatellite: SatelliteModel = new SatelliteModel(+satellite.noradId, satellite.satelliteName, false, false, null);\r\n\r\n    this.dataSharingService.setToggleSelectedSatellite(selectedSatellite);\r\n  }\r\n\r\n}\r\n","<div class=\"result-wrapper\">\r\n    <app-loading-overlay *ngIf=\"isSearching\" [message]=\"'Loading Results'\" [borderRadius]=\"'0.5em'\"></app-loading-overlay>\r\n    <div class=\"result-body\">\r\n        <ng-container *ngFor=\"let result of searchResults\">\r\n            <div class=\"result\">\r\n                <div class=\"result-name\">\r\n                    <a class=\"result-link\">\r\n                        <span class=\"material-icons\">\r\n                            satellite_alt\r\n                        </span>\r\n                        {{ result.satelliteName }}\r\n                    </a>\r\n                </div>\r\n                <div class=\"checkbox-wrapper\">\r\n                    <label class=\"toggle-body\">\r\n                        <input type=\"checkbox\" class=\"actual-checkbox\" (change)=\"toggleSatellite(result)\" [checked]=\"result.isRendered\">\r\n                        <span class=\"ball\"></span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <hr>\r\n        </ng-container>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { Subject, empty } from 'rxjs';\r\nimport { SearchSatellite } from '@models/search-satellite-response.model';\r\nimport { debounceTime, distinctUntilChanged, switchMap, map } from 'rxjs/operators';\r\nimport { MapService } from '@services/map.service';\r\nimport { DataSharingService } from '@services/data-sharing.service';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.less']\r\n})\r\nexport class SearchComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('searchEl', { static: false }) searchEl: ElementRef<HTMLInputElement>;\r\n  searchObs: Subject<string> = new Subject<string>();\r\n  searchResults: SearchSatellite[] = [];\r\n  isSearching: boolean = false;\r\n  showResultPanel: boolean = false;\r\n  searchString: string;\r\n\r\n  constructor(private mapService: MapService,\r\n    private dataSharingService: DataSharingService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.searchObs\r\n      .pipe(\r\n        debounceTime(500),\r\n        distinctUntilChanged(),\r\n        switchMap((searchValue: string) => {\r\n          this.isSearching = true;\r\n          if (searchValue) {\r\n            this.searchResults = [];\r\n            return this.mapService.getSatelliteByName(searchValue)\r\n          }\r\n\r\n          return empty();\r\n        }),\r\n        map((res) => {\r\n          res.satellite.forEach((satellite) => {\r\n            const findIndex = this.dataSharingService.satellites.findIndex((s) => s.satId == +satellite.noradId);\r\n            satellite.isRendered = findIndex != -1;\r\n          });\r\n          return res;\r\n        })\r\n      )\r\n      .subscribe((res: { satellite: SearchSatellite[] }) => {\r\n        if(!res) { return; }\r\n\r\n        this.searchResults = res.satellite;\r\n        this.isSearching = false;\r\n      }, () => { this.isSearching = false });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.searchEl.nativeElement.onkeyup = (ev: KeyboardEvent) => {\r\n      this.searchString = this.searchEl.nativeElement.value;\r\n      this.onSearchStringChange();\r\n    }\r\n  }\r\n\r\n  onSearchStringChange(): void {\r\n    if (this.searchString) {\r\n      this.showResultPanel = true;\r\n    } else {\r\n      this.showResultPanel = false;\r\n    }\r\n    this.searchObs.next(this.searchString);\r\n  }\r\n\r\n  clearSearch(): void {\r\n    this.searchEl.nativeElement.value = '';\r\n    const keyUpEvent = new KeyboardEvent('keyup');\r\n    this.searchEl.nativeElement.dispatchEvent(keyUpEvent);\r\n  }\r\n}\r\n","<div class=\"search-wrapper\">\r\n    <input type=\"text\" name=\"search\" id=\"search-sat\" #searchEl placeholder=\"Search satellites\" autocomplete=\"off\">\r\n    <a class=\"cancel-btn\" *ngIf=\"searchString\"\r\n    (click)=\"clearSearch()\">\r\n        <span class=\"material-icons\">\r\n            close\r\n        </span>\r\n    </a>\r\n</div>\r\n<app-search-result *ngIf=\"showResultPanel\" [isSearching]=\"isSearching\" [searchResults]=\"searchResults\">\r\n</app-search-result>","import * as Cesium from 'cesium';\r\n\r\nexport class SatelliteModel {\r\n    public orbitColor: Cesium.Color;\r\n    constructor(\r\n        public satId: number,\r\n        public satName: string,\r\n        public isRendered: boolean,\r\n        public isOrbitRendered: boolean,\r\n        public tleData: string\r\n    ) {\r\n        this.orbitColor = Cesium.Color.fromRandom();\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { SatelliteModel } from '../models/satellite.model';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataSharingService {\r\n  toggleSelectedSatellite: Subject<SatelliteModel> = new Subject<SatelliteModel>();\r\n  readonly satellites: SatelliteModel[] = [];\r\n\r\n  constructor() { }\r\n\r\n  getToggleSelectedSatellite(): Subject<SatelliteModel> {\r\n    return this.toggleSelectedSatellite;\r\n  }\r\n\r\n  setToggleSelectedSatellite(satellite: SatelliteModel): void {\r\n    this.toggleSelectedSatellite.next(satellite);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport * as Cesium from 'cesium';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { constants } from 'src/constants';\r\nimport { UrlFormationService } from './url-formation.service';\r\nimport { TleResponseModel } from '../models/tle-response.model';\r\nimport { SearchSatellite } from \"../models/search-satellite-response.model\";\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MapService {\r\n  private hasuraSecretKey: string = environment.hasura.hasuraSecretKey;\r\n  \r\n  constructor(private http: HttpClient, private urlFormationService: UrlFormationService) {\r\n    Cesium.Ion.defaultAccessToken = constants.defaultAccessToken;\r\n  }\r\n\r\n  getTle(noradId: number): Observable<TleResponseModel> {\r\n    return this.http.get<TleResponseModel>(\r\n      this.urlFormationService.getTleUrl(noradId.toString())\r\n    );\r\n  }\r\n\r\n  getSatelliteByName(satname: string): Observable<{ satellite: SearchSatellite[]}> {\r\n    let headers = new HttpHeaders();\r\n    headers = headers.append('x-hasura-admin-secret', this.hasuraSecretKey);\r\n    return this.http.get<{ satellite: SearchSatellite[]}>(this.urlFormationService.getSatelliteByNameUrl(satname + '%25'), {\r\n      headers: headers\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UrlFormationService {\r\n  private baseUrl: string = environment.apiBaseUrl;\r\n  private apiKey: string = environment.apiKey;\r\n  private dbBaseUrl: string = environment.hasura.hasuraBaseUrl;\r\n\r\n  constructor() { }\r\n\r\n  getTleUrl(noradId: string): string {\r\n    return `${this.baseUrl}tle/`+ noradId + `&apiKey=${this.apiKey}`;\r\n  }\r\n\r\n  getSatelliteByNameUrl(satname: string): string {\r\n    return `${this.dbBaseUrl}satellite/${satname}`;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loader',\r\n  templateUrl: './loader.component.html',\r\n  styleUrls: ['./loader.component.less']\r\n})\r\nexport class LoaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"loader\"></div>","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loading-overlay',\r\n  templateUrl: './loading-overlay.component.html',\r\n  styleUrls: ['./loading-overlay.component.less']\r\n})\r\nexport class LoadingOverlayComponent implements OnInit {\r\n  @Input('message') message: string;\r\n  @Input('borderRadius') borderRadius: string = '0em';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"loading-overlay\" [ngStyle]=\"{'border-radius': borderRadius}\">\r\n    <app-loader></app-loader>\r\n</div>","export const constants = {\r\n  defaultAccessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJlNDM0ZWYzZC0xODJjLTRhZWYtOWE3Ni1hOTRmYzFmNWViYjMiLCJpZCI6MjU1NDMsInNjb3BlcyI6WyJhc3IiLCJnYyJdLCJpYXQiOjE1ODYxNjY2NjJ9.uAT9pYPZ4RZrs5Aoj3jcymiFZ0QlpCyf5EslMk74AvY',\r\n};","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n// For n2yo API\r\nconst apiBaseUrl = 'https://api.n2yo.com/rest/v1/satellite/';\r\nconst apiKey = 'YC9DQJ-37AG2W-N5G4NY-4KM3';\r\n\r\n// For hasura API\r\nconst hasuraSecretKey = 'R6jbMtmywtXzMGapRCwHXvb4D919KZrSsq3jz7RERjCi6jXv4XPcqQVcEShIrxZT';\r\nconst hasuraBaseUrl = 'https://satrack.hasura.app/api/rest/';\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiBaseUrl: apiBaseUrl,\r\n  apiKey: apiKey,\r\n  hasura: {\r\n    hasuraBaseUrl: hasuraBaseUrl,\r\n    hasuraSecretKey: hasuraSecretKey\r\n  }\r\n};\r\n\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport { Ion } from 'cesium';\r\nimport { constants } from './constants';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nwindow['CESIUM_BASE_URL'] = \"assets/Cesium\";\r\nIon.defaultAccessToken = constants.defaultAccessToken;\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}